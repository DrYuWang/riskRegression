% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictCox.R
\name{predictCox}
\alias{predictCox}
\title{Fast prediction of survival, hazard and cumulative hazard from Cox regression model}
\usage{
predictCox(object, newdata = NULL, times, centered = TRUE,
  type = c("hazard", "cumhazard", "survival"), keep.strata = TRUE,
  keep.times = TRUE, keep.lastEventTime = FALSE, keep.newdata = FALSE,
  se = FALSE, iid = FALSE, format = "data.frame")
}
\arguments{
\item{object}{The fitted Cox regression model object either
obtained with \code{coxph} (survival package) or \code{cph}
(rms package).}

\item{newdata}{A data frame or table containing the values of the
predictor variables defining subject specific predictions. Should have
the same structure as the data set used to fit the \code{object}.}

\item{times}{Time points at which to evaluate the predictions.}

\item{centered}{If TRUE remove the centering factor used by \code{coxph}
in the linear predictor.}

\item{type}{One or several strings that match (either in lower or upper case or mixtures) one
or several of the strings \code{"hazard"},\code{"cumhazard"}, \code{"survival"}}

\item{keep.strata}{Logical. If \code{TRUE} add the (newdata) strata to the output. Only if there any.}

\item{keep.times}{Logical. If \code{TRUE} add the evaluation times to the output.}

\item{keep.lastEventTime}{Logical. If \code{TRUE} add the time at which the last event occured in each strata to the output list.}

\item{keep.newdata}{Logical. If \code{TRUE} add the value of the covariates used to make the prediction in the output list.}

\item{se}{Logical. If \code{TRUE} add the standard error corresponding to the output.}

\item{iid}{Logical. If \code{TRUE} add the influence function corresponding ot the output.}

\item{format}{how to export the baseline hazard. Can be \code{"data.frame"}, \code{"data.table"} or \code{"list"}.}
}
\value{
When extracting the baseline hazard (missing newdata and times argument),
a data frame containing the jump times, the baseline hazard, the cumulative baseline hazard, the strata (optional), and the baseline survival.

Otherwise, when performing prediction, a list containing:
\itemize{
\item{hazard}: (matrix) the hazard predicted for each patient (in rows) and each time (in columns).
\item{hazard.se}: (matrix) the standard errors of the predicted hazard.
\item{cumhazard}: (matrix) the cumulative hazard predicted for each patient (in rows) and each time (in columns).
\item{cumhazard.se}: (matrix) the standard errors of the predicted cumulative hazard.
\item{survival}: (matrix) the survival predicted for each patient (in rows) and each time (in columns).
\item{survival.se}: (matrix) the standard errors of the predicted survival.
\item{times}: (vector) the evaluation times.
\item{strata}: (vector) the strata indicator.
}
}
\description{
Fast routine to get baseline hazards and subject specific hazards
as well as survival probabilities from a coxph or cph object
}
\details{
Not working with time varying predictor variables or
    delayed entry.
The centered argument enables to reproduce results obtained with the \code{basehaz} function from the survival package.

To avoid the computation of the influence function within the predictCox function, one can create a slot iid in the object
and put in this slot the value of the influence function for the baseline hazard and the beta.
This slot must have the format as the output of the function \code{iidCox}.
}
\examples{
library(survival)

set.seed(10)
d <- SimSurv(1e2)
nd <- SimSurv(10)
d$time <- round(d$time,1)
fit <- coxph(Surv(time,status)~X1 * X2,
             data=d, ties="breslow", x = TRUE, y = TRUE)
# table(duplicated(d$time))

predictCox(fit)
predictCox(fit, newdata=nd, times = 5)
cbind(survival::basehaz(fit),predictCox(fit,type="cumhazard"))

# one strata variable
fitS <- coxph(Surv(time,status)~strata(X1)+X2,
              data=d, ties="breslow", x = TRUE, y = TRUE)

predictCox(fitS)
predictCox(fitS, newdata=nd, times = 1)

# two strata variables
set.seed(1)
d$U=sample(letters[1:5],replace=TRUE,size=NROW(d))
d$V=sample(letters[4:10],replace=TRUE,size=NROW(d))
nd$U=sample(letters[1:5],replace=TRUE,size=NROW(nd))
nd$V=sample(letters[4:10],replace=TRUE,size=NROW(nd))
fit2S <- coxph(Surv(time,status)~X1+strata(U)+strata(V)+X2,
              data=d, ties="breslow", x = TRUE, y = TRUE)

cbind(survival::basehaz(fit2S),predictCox(fit2S,type="cumhazard"))
predictCox(fit2S)
predictCox(fitS, newdata=nd, times = 3)


}
\author{
Brice Ozenne broz@sund.ku.dk, Thomas A. Gerds tag@biostat.ku.dk
}

