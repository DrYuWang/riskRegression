% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print.predictCox.R
\name{print.predictCox}
\alias{print.predictCox}
\title{Print predictions from a Cox model}
\usage{
\method{print}{predictCox}(x, type = NULL, ci = FALSE,
  reduce.data = FALSE, conf.level = 0.95, digit = 3, ...)
}
\arguments{
\item{x}{object obtained with the function \code{predictCox}.}

\item{type}{One or several strings that match (either in lower or upper case or mixtures) one
or several of the strings \code{"hazard"},\code{"cumhazard"}, \code{"survival"}}

\item{ci}{Logical. If \code{TRUE} display the confidence intervals for the predictions.}

\item{reduce.data}{Logical. If \code{TRUE} only the covariates that does take indentical values for all observations are displayed.}

\item{conf.level}{confidence level of the interval.}

\item{digit}{integer indicating the number of decimal places.}

\item{...}{Passed to print.}
}
\description{
Print predictions from a Cox model
}
\examples{
library(survival)
library(rms)

set.seed(10)
d <- sampleData(1e2, outcome = "survival")
m.cox <- coxph(Surv(time,event)~ X1 + X2 + X3,
               data = d, x = TRUE, y = TRUE)
predictCox(m.cox)

pred <- predictCox(m.cox, newdata = d[1:5,],
                   times = 1:5, type = "survival")
pred

pred.data <- predictCox(m.cox, newdata = d[1:4,],
             times = 1:5, type = "survival", keep.newdata = TRUE)
pred.data
print(pred.data, reduce.data = TRUE)

pred.ci <- predictCox(m.cox, newdata = d[1:5,],
                      times = 1:5,se = TRUE)
print(pred.ci, ci = TRUE)

m.cox <- coxph(Surv(time,event)~ strata(X1) + strata(X2) + X3 + X6,
               data = d, x = TRUE, y = TRUE)
pred.cox <- predictCox(m.cox, newdata = d[c(1:5,10,50),],
                       time = 1:5)
pred.cox

m.cox <- cph(Surv(time,event)~ strat(X1) + strat(X2) + X3 + X6,
             data = d, x = TRUE, y = TRUE)
pred.cox <- predictCox(m.cox, newdata = d[c(1:5,10,50),],
                       time = 1:5)
pred.cox

pred.dataci <- predictCox(m.cox, newdata = d[1:5,],
                       times = 1:5, keep.newdata = TRUE, se = TRUE)
pred.dataci
print(pred.dataci, ci = TRUE)

}

